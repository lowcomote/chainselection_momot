model JavaSource driver EMF {nsuri = "http://www.eclipse.org/gmt/2005/JavaSource"};
model HTML driver EMF {nsuri = "nsUri"};

pre {"JavaSource2HTML transformation starts". println();}

operation allMethodDefs() : Sequence(JavaSource!MethodDefinition) {
	//"abc".println();
	if(JavaSource!ClassDeclaration.isDefined() and JavaSource!MethodDefinition.class.isDefined()) {
	return JavaSource!MethodDefinition.all.sortBy(e | e.class.name + '_' +  e.name);
	}
	else {return null;}
	
}

operation JavaSource!MethodDefinition
computeContent(col : JavaSource!MethodDefinition) : Integer {
//"def".println();
if(JavaSource!MethodInvocation.isDefined() and JavaSource!MethodDefinition.isDefined())
return self.invocations.select(i | i.method.name = col.name
				and i.method.class.name = col.class.name).size();
}

rule JavaS2Root
transform
	s : JavaSource!JavaSource
to
	x : HTML!TABLE {	
		
	//x.head = 'html';
	x.trs = Sequence{allMethodDefs().collect(e | e.equivalent())}.flatten();
	
}

rule MethodDefinition2HTMLElement
transform
	m : JavaSource!MethodDefinition

to
	x : HTML!TR, th : HTML!TH {
	//x.children = Sequence{allMethodDefs().collect(md|md.equivalents())}.flatten();
	//var md : JavaSource!MethodDefinition;
	x.tds = Sequence{th, allMethodDefs().collect(md|md.equivalent("MethodDefinition2TH"))}.flatten();
	
	//x.tds = Sequence{allMethodDefs().collect(e | e.equivalent())}.flatten();
		
}

rule MethodDefinition2TH 
	transform
		md: JavaSource!MethodDefinition
	to
		th : HTML!TH {
			var m : JavaSource!MethodDefinition;
			th.value = md.computeContent(m).toString();
		}

post {"JavaSource2HTML transformation ends". println();}
