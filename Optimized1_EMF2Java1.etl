model Ecore driver EMF {nsuri = "http://www.eclipse.org/emf/2002/Ecore1"};
model JavaSource driver EMF {nsuri = "http://www.eclipse.org/gmt/2005/JavaSource"};
pre {
	"EMF2Java Transformation starts".println();
}
rule Package
transform s : Ecore!EPackage
to t : JavaSource!JavaSource
 {
}
rule Eclass
transform s : Ecore!EClass
to t : JavaSource!ClassDeclaration
 {
	t.name = s.name;
	t.superclass = s.eSuperTypes.first().equivalent();
}
rule Attr2Methods
transform s : Ecore!EAttribute
to t1 : JavaSource!MethodDefinition, t2 : JavaSource!MethodDefinition, p : JavaSource!Property
 {
	t1.class = s.eContainingClass.equivalent();
	t1.name = "set" + s.name.firstToUpperCase();
	t2.class = s.eContainingClass.equivalent();
	t2.name = "get" + s.name.firstToUpperCase();
	p.name = s.name;
}
rule Ref2Methods
transform s : Ecore!EReference
to t1 : JavaSource!MethodDefinition, t2 : JavaSource!MethodDefinition, p : JavaSource!Property
 {
	t1.class = s.eContainingClass.equivalent();
	t1.name = "set" + s.name.firstToUpperCase();
	t2.class = s.eContainingClass.equivalent();
	t2.name = "get" + s.name.firstToUpperCase();
	p.name = s.name;
}
post {
	"EMF2Java Transformation ends".println();
}
